name: Mindustry Logic
fileTypes:
  - mlog
scopeName: source.mlog
patterns:
  - include: "#comment"
  - include: "#label"
  - include: "#statement"
  - include: "#semicolon"
repository:
  comment:
    name: comment.line.number-sign.mlog
    match: (#+).*$
    captures:
      1:
        name: punctuation.definition.comment.mlog
  identifier:
    match: '[^\s#;]+'
    name: variable.other.mlog
  number:
    patterns:
      # the lookaheads and lookbehinds are to ensure that the number is not part of an identifier
      - comment: Match hexadecimal numbers
        name: constant.numeric.hex.mlog
        match: (?<=\s|^)([+-])?0x[a-fA-F0-9]+(?=\s|$|;)
        captures:
          1:
            name: keyword.operator.arithmetic.mlog
      - comment: Match hexadecimal color literals
        name: constant.numeric.hex.mlog
        match: (?<=\s|^)%[a-fA-F0-9]+(?=\s|$|;)
      - comment: Match named color literals
        name: constant.numeric.mlog
        match: (?<=\s|^)%\[[a-zA-Z]+\](?=\s|$|;)
      - name: constant.numeric.binary.mlog
        match: (?<=\s|^)([+-])?(?i:(0b[01]+))(?=\s|$|;)
        captures:
          1:
            name: keyword.operator.arithmetic.mlog
      - name: constant.numeric.decimal.mlog
        match: (?<=\s|^)([+-])?\d+(\.\d+)?[fF.]?(?=\s|$|;)
        captures:
          1:
            name: keyword.operator.arithmetic.mlog
      - name: constant.numeric.decimal.mlog
        match: (?<=\s|^)([+-])?\.\d+[fF.]?(?=\s|$|;)
        captures:
          1:
            name: keyword.operator.arithmetic.mlog
      - name: constant.numeric.decimal.mlog
        match: (?<=\s|^)([+-])?\d+[Ee][+-]?\d+[fF.]?(?=\s|$|;)
        captures:
          1:
            name: keyword.operator.arithmetic.mlog
  semicolon:
    match: ;(.*)$
    captures:
      0:
        patterns:
          - include: "#comment"
          - include: "#label"
          - include: "#statement"
  statement:
    match: \s*([^\s#;]+)(.*)$
    captures:
      1:
        patterns:
          - match: (wait|end|jump|stop)$
            name: keyword.control.mlog
          - match: .*
            name: keyword.mlog
      2:
        patterns:
          - include: "#comment"
          - include: "#value"
          - include: "#identifier"
          - include: "#semicolon"
  value:
    patterns:
      - name: constant.language.boolean.true.mlog
        match: \btrue\b
      - name: constant.language.boolean.false.mlog
        match: \bfalse\b
      - name: constant.language.null.mlog
        match: \bnull\b
      - include: "#number"
      - include: "#string"

  label:
    match: \s*([^\s#;]+)(:)(.*)
    captures:
      1:
        name: entity.name.function.mlog
      2:
        name: punctuation.separator.colon.mlog
      3:
        patterns:
          - include: "#comment"
          - include: "#value"
          - include: "#identifier"
          - include: "#semicolon"
  string:
    name: string.quoted.double.mlog
    begin: '"'
    beginCaptures:
      0:
        name: punctuation.definition.string.begin.mlog
    end: "\"|\\n"
    endCaptures:
      0:
        name: punctuation.definition.string.end.mlog
    patterns:
      - name: constant.character.escape.mlog
        match: \\n
        # by default, a single bracket is treated as the start
        # of a tag, and two brackets are an escaped bracket
      - name: constant.character.escape.mlog
        match: \[\[
        # matches color opening brackets like [red]
        # and their closing pairs, []
      - match: (\[)([^\[\] ]*)(\])
        captures:
          1:
            name: punctuation.definition.tag.begin.mlog
          2:
            name: entity.name.tag.mlog
          3:
            name: punctuation.definition.tag.end.mlog
      - name: constant.character.escape.mlog
      - match: (\{)(\d)(\})
        captures:
          1:
            name: punctuation.section.embedded.begin.mlog
          2:
            name: punctuation.section.embedded.mlog
          3:
            name: punctuation.section.embedded.end.mlog
